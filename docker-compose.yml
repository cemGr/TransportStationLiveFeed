services:
  # ──────────────── PostGIS Database ───────────────────
  db:
    image: postgis/postgis:15-3.3
    container_name: bike_postgis
    restart: unless-stopped
    environment:
      POSTGRES_USER: bikeshare_admin
      POSTGRES_PASSWORD: pass1234
      POSTGRES_DB: bikeshare
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./initdb:/docker-entrypoint-initdb.d
      - ./data:/data
    ports:
      - "5432:5432"

  # ──────────────── pgAdmin UI ─────────────────────────
  pgadmin:
    image: dpage/pgadmin4:7.5
    container_name: pgadmin
    restart: unless-stopped
    env_file: .env
    environment:
      PGADMIN_DEFAULT_EMAIL: thomas@zehetbauer.name
      PGADMIN_DEFAULT_PASSWORD: admin1234
    volumes:
      - pgadmindata:/var/lib/pgadmin
    ports:
      - "8080:80"
    depends_on:
      - db

  # ──────────────── Station scraper ────────────────────
  station_scraper:
    build:
      context: .
      dockerfile: Dockerfile
    command: ["-m", "new_project_src.scripts.run_station_ingest"]
    env_file: .env
    depends_on:
      - db
    volumes:
      - ./data:/app/data

  # ──────────────── Trip scraper ───────────────────────
  trip_scraper:
    build:
      context: .
      dockerfile: Dockerfile
    command: ["-m", "new_project_src.scripts.run_trip_ingest"]
    env_file: .env
    depends_on:
      - db
      #- station_scraper
    volumes:
      - ./data:/app/data

  # ──────────────── Live GeoJSON scraper ──────────────
  live_geojson_scraper:
    build:
      context: .
      dockerfile: Dockerfile
    command: ["-m", "new_project_src.scripts.run_live_geojson_ingest"]
    env_file: .env
    depends_on:
      - db
      #- station_scraper
    volumes:
      - ./data:/app/data

  # ──────────────── Weather ingestion ──────────────────
  weather_scraper:
    build:
      context: .
      dockerfile: Dockerfile
    command: ["-m", "new_project_src.scripts.run_weather_ingest"]
    env_file: .env
    depends_on:
      - db
      #- trip_scraper
    volumes:
      - ./data:/app/data

  # ──────────────── Streamlit UI ───────────────────────
  streamlit:
    build:
      context: .
      dockerfile: Dockerfile
    # override the ENTRYPOINT so we use the streamlit binary
    entrypoint: [ "streamlit" ]
    command:
      - run
      - new_project_src/streamlit/main.py
      - --server.port=8501
      - --server.address=0.0.0.0
    env_file: .env
    depends_on:
      - db
    ports:
      - "8501:8501"
    volumes:
      - ./new_project_src/streamlit:/app/new_project_src/streamlit
      - staticfiles:/app/staticfiles
      - ./data:/app/data

volumes:
  pgdata:
  pgadmindata:
  staticfiles: